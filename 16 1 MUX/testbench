`timescale 1ns / 1ps

module mux161_tb;
    reg [15:0] in;
    reg [3:0] sel;
    wire y;

    mux161 uut (
        .in(in),
        .sel(sel),
        .y(y)
    );

    initial begin
        $dumpfile("mux161.vcd");
        $dumpvars(0, mux161_tb);
        $monitor("Time = %0t | sel = %0d (%b) | y = %b", $time, sel, sel, y);

        in = 16'b1010101010101010;  // Alternating 1s and 0s
        sel = 4'd0;  #10;  // in[0] = 0
        sel = 4'd1;  #10;  // in[1] = 1
        sel = 4'd2;  #10;  // in[2] = 0
        sel = 4'd3;  #10;  // in[3] = 1
        sel = 4'd4;  #10;  // in[4] = 0
        sel = 4'd5;  #10;  // in[5] = 1
        sel = 4'd6;  #10;  // in[6] = 0
        sel = 4'd7;  #10;  // in[7] = 1
        sel = 4'd8;  #10;  // in[8] = 0
        sel = 4'd9;  #10;  // in[9] = 1
        sel = 4'd10; #10;  // in[10] = 0
        sel = 4'd11; #10;  // in[11] = 1
        sel = 4'd12; #10;  // in[12] = 0
        sel = 4'd13; #10;  // in[13] = 1
        sel = 4'd14; #10;  // in[14] = 0
        sel = 4'd15; #10;  // in[15] = 1

        $finish;
    end
endmodule
